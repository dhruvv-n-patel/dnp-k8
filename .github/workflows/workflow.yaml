name: One Click Deployment

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch name'
        required: true
        default: 'main'  # Default branch name
      service:
        description: 'Service name'
        type: choice
        required: true
        options:
        - nature-client
        - example-log
        - uptime-kuma
        default: nature client
      cluster:
        description: 'Cluster to deploy to'
        type: choice
        required: true
        options:
        - minikube
        - docker-desktop
        default: minikube

jobs:
  Deployment_Stage:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Install Helm
        uses: azure/setup-helm@v3.3
        with:
          version: v3.14.0
      
          
      - name: setup minikube
        run: |
         minikube start

      - name: add ingress option
        run: |
         minikube addons enable ingress
      
      - name: Switch to Specific cluster
        run: |
          kubectl config use-context ${{ inputs.cluster }}

      # - name: Create secret
      #   run: |
      #     kubectl create namespace ${{ inputs.cluster }}-namespace
      #     kubectl create secret generic service-trust-store --from-file=././manifest/tls.crt --from-file=././manifest/tls.key -o yaml | kubectl apply -f -

      - name: nature-client
        if: ${{ (inputs.service == 'nature-client') }}
        run: |
          cd naturechart
          kubectl create namespace ${{ inputs.cluster }}-nature-client-devl-namespace
          helm upgrade --install --wait --timeout 240s --history-max 5 nature-client . -n ${{ inputs.cluster }}-nature-client-devl-namespace

      - name: example log
        if: ${{ (inputs.service == 'example-log') }}
        run: |
          cd examplechart
          kubectl create namespace ${{ inputs.cluster }}-example-log-devl-namespace
          helm upgrade --install --wait --timeout 240s --history-max 5 example-log . -n ${{ inputs.cluster }}-example-log-devl-namespace

      - name: uptime kuma
        if: ${{ (inputs.service == 'uptime-kuma') }}
        run: |
          cd uptimechart
          kubectl create namespace ${{ inputs.cluster }}-uptime-kuma-devl-namespace
          helm upgrade --install --wait --timeout 240s --history-max 5 uptime-kuma . ${{ inputs.cluster }}-uptime-kuma-devl-namespace 

      - name: Apply certificates
        run: |
          kubectl apply -f ./manifest/issuer.yaml 
          kubectl apply -f ./manifest/certificate.yaml 

      - name: Send telegram notification
        uses: haishanh/actions-telegram-notification@v1.1.0
        if: ${{ always() }}
        with:
          notification-token: ${{ secrets.NOTIFICATION_TOKEN }}
          job-status: ${{ job.status }}

  Deployment_Rollback:
    runs-on: self-hosted
    if: failure()
    needs: [Deployment_Stage]
    steps:
    - name: Roll-back Deployment
      run: |
          helm rollback ${{inputs.service}} -n ${{ inputs.cluster }}-${{ inputs.service }}-devl-namespace
        


            
